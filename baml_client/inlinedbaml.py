###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}\n\n\nclient<llm> Gemini {\n  provider google-ai\n  options {\n    model \"gemini-1.5-pro-001\"\n    api_key env.GOOGLE_API_KEY\n  }\n}\n\nclient<llm> GeminiFlash {\n  provider google-ai\n  options {\n    model \"gemini-1.5-flash\"\n    api_key env.GOOGLE_API_KEY\n  }\n}\n\nclient<llm> GeminiFlashWithHeaders {\n  provider google-ai\n  options {\n    model \"gemini-1.5-flash\"\n    api_key env.GOOGLE_API_KEY\n    headers {\n      \"X-My-Header\" \"my-value\"\n    }\n    generationConfig {\n      temperature 0.5\n      maxOutputTokens 8192\n    }\n  }\n}\n\nclient<llm> Gemini20Flash {\n  provider google-ai\n  options {\n    model \"gemini-2.0-flash\"\n    api_key env.GOOGLE_API_KEY\n    generationConfig {\n      temperature 0.7\n      maxOutputTokens 8192\n    }\n  }\n}\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.89.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "ppt.baml": "// PowerPoint presentation generation schema\n\n// Input structures\nclass OutlinePoint {\n  text string @description(\"The text content of the bullet point\")\n}\n\nclass OutlineSection {\n  id int @description(\"Unique identifier for the section\")\n  title string @description(\"The title of the section\")\n  points string[] @description(\"List of bullet points for this section\")\n}\n\nclass PresentationInput {\n  id int @description(\"Unique identifier for the presentation\")\n  title string @description(\"The title of the presentation\")\n  outline OutlineSection[] @description(\"The sections that make up the presentation outline\")\n}\n\n// Output structures for slide elements and styling\nclass ImageElement {\n  id string @description(\"Unique identifier for the image element, e.g. s1_img\")\n  type string @description(\"Type of element, must be 'image'\")\n  x int @description(\"X position of the element in pixels from left\")\n  y int @description(\"Y position of the element in pixels from top\")\n  width int @description(\"Width of the element in pixels\")\n  height int @description(\"Height of the element in pixels\")\n  src string @description(\"URL for the image placeholder. Example: https://placehold.co/600x400\")\n  alt string @description(\"Alternative text description of the image\")\n  caption string @description(\"Caption text to display below the image\")\n  prompt string @description(\"Detailed description for AI image generation\")\n  style ImageStyle @description(\"Style properties for the image\")\n}\n\nclass ImageStyle {\n  borderRadius string @description(\"Border radius of the image, e.g. '8px'\")\n  objectFit string @description(\"How the image should fit its container, e.g. 'cover'\")\n  marginBottom string @description(\"Margin below the image block, e.g. '20px'\")\n}\n\nclass SlideElement {\n  id string @description(\"Unique identifier for the element, e.g. s1_title, s1_para\")\n  x int @description(\"X position of the element in pixels from left\")\n  y int @description(\"Y position of the element in pixels from top\") \n  width int @description(\"Width of the element in pixels\")\n  height int @description(\"Height of the element in pixels\")\n  html string @description(\"HTML content with required styling. Example: <h1 style='text-align:center;font-size:46px;color:#2c3e50'>Title Text</h1>\")\n}\n\nclass SlideContent {\n  slide_id string @description(\"Unique identifier for the slide, e.g. slide_1\")\n  background string @description(\"Background style or color of the slide. Example: linear-gradient(135deg,#ffffff,#f0f4f8)\")\n  content (SlideElement | ImageElement)[] @description(\"List of elements on the slide\")\n}\n\n// The function that generates a PowerPoint presentation\nfunction GeneratePresentation(input: PresentationInput) -> SlideContent[] {\n  client Gemini20Flash\n  \n  prompt #\"\n    You are a professional **Slide Generation AI Assistant** built for modern sales teams. Your role is to help salespeople generate **polished, client-facing PowerPoint slides** from structured sales data — including deal summaries, mind maps, client notes, and strategy outlines.\n\n    ---\n\n    ## 🎯 PURPOSE:\n\n    This tool helps **sales professionals** save time and effort by instantly turning structured sales input (like mind maps or outlines) into **comprehensive, ready-to-present slides**. These slides are typically used to:\n\n    - Pitch products or solutions to clients\n    - Summarize key deal conversations\n    - Share strategies or action plans\n    - Present progress and updates to stakeholders\n\n    The final slide deck should be professional, visually engaging, content-rich, and tailored for **external presentation to clients or decision-makers**.\n\n    ---\n\n    ## 📥 DATA SOURCE:\n\n    The structured input you'll receive is derived from:\n    - AI-generated **Deal Summaries**\n    - Sales meeting transcripts\n    - Salesperson-entered mind maps and outlines\n    - CRM-extracted insights and notes\n\n    This information has already been pre‑processed into a structured mind map format that you will use to build the slides.\n\n    ---\n\n    ## 🧠 YOUR ROLE:\n\n    As the assistant, your job is to:\n    1. **Content Expansion Strategy:**\n       - For EACH bullet point, create a minimum of 2-3 detailed slides\n       - Break down complex topics into step-by-step explanations\n       - Add industry statistics, market data, and trend analysis\n       - Include real-world case studies and success stories\n       - Provide expert quotes and industry leader insights\n       - Add competitor analysis and market positioning\n    \n    2. **Mandatory Slide Generation Requirements:**\n       - Generate MINIMUM 7-9 slides for EACH major section\n       - Create 2-3 detail slides for EACH bullet point provided\n       - Include transition slides between sections\n       - Add comprehensive summary slides after each section\n    \n    3. **Required Slide Types for Each Section:**\n       a. Introduction Slides:\n          - Section title and overview\n          - Key statistics and market data\n          - Current challenges and opportunities\n          - Context and background information\n       \n       b. Detailed Content Slides:\n          - In-depth analysis for each point\n          - Supporting data and evidence\n          - Case studies and examples\n          - Implementation strategies\n          - Best practices and recommendations\n       \n       c. Supporting Slides:\n          - Visual representations (charts, graphs, infographics)\n          - Comparison tables and matrices\n          - Timeline and roadmap slides\n          - Risk analysis and mitigation strategies\n    \n    4. **Content Enhancement Rules:**\n       - Every major point must be expanded with:\n         * Background context and market analysis\n         * Detailed technical explanation\n         * Supporting data and statistics\n         * Real-world examples and case studies\n         * Implementation guidelines\n         * Success metrics and KPIs\n         * Future trends and predictions\n       - Include expert opinions and research findings\n       - Add competitive landscape analysis\n       - Provide actionable recommendations\n    \n    5. **Professional Polish Requirements:**\n       - Use modern design best practices\n       - Ensure consistent visual hierarchy\n       - Include executive-level summaries\n       - Add detailed footnotes and references\n       - Maintain professional branding throughout\n       - Use high-quality visuals and professional icons\n\n    ---\n\n    ## 🎨 Theme Behavior:\n\n    - If mindMapJson.theme is \"light\":\n      - Use **varied light backgrounds** (e.g., white, off-white, subtle light gradients, very light blues or grays as specified in Design Guidelines).\n      - Use **dark text colors** with adequate contrast (e.g., deep blues, charcoal, rich browns, dark navy) for headings and paragraphs.\n      - Use accent colors like soft blues (#4285F4), subtle greens (#34A853), light teals (#00ACC1), or gentle oranges (#FB8C00).\n    - If mindMapJson.theme is \"dark\":\n      - Use **varied dark backgrounds** (e.g., deep blue-blacks, rich charcoals, subtle dark gradients as specified in Design Guidelines).\n      - Use **light text colors** with excellent contrast (e.g., off-whites, soft creams, light grays) for headings and paragraphs.\n      - Use accent colors like vibrant teals (#00BCD4), glowing purples (#AB47BC), bright cyans (#00E5FF), or warm ambers (#FFD740).\n\n    The design should always be visually coherent, modern, and extremely easy to read, following the **DESIGN & STYLE GUIDELINES**.\n\n    ---\n\n    ## 🌟 DESIGN & STYLE GUIDELINES:\n\n    Your generated slides must be visually stunning, contemporary, and executive-level professional. Adhere to these principles:\n\n\n    TEXT ELEMENT STYLES:\n    - Headings: style='text-align:center;font-size:46px;color:#2c3e50'\n    - Paragraphs: style='font-size:22px;line-height:1.55'\n    - Lists: style='font-size:22px;line-height:1.6;list-style-type:disc'\n\n    IMAGE GUIDELINES:\n    1. Position images strategically:\n       - Right-side: x=55% of slide width, width=40% (with text at x=5%)\n       - Left-side: x=5%, width=40% (with text at x=50%)\n       - Center below text: x=25%, width=50%\n    2. Include for each image:\n       - Detailed prompt describing the desired visual\n       - Placeholder URL (https://placehold.co/[width]x[height]/[bg-color]/[text-color])\n       - Alt text and caption\n       - Style properties (borderRadius, objectFit, marginBottom)\n    3. Ensure no overlap between images and text\n    4. Match image theme colors with slide background\n\n    Example slide structure:\n    {\n      \"slide_id\": \"slide_1\",\n      \"background\": \"linear-gradient(135deg,#ffffff,#f0f4f8)\",\n      \"content\": [\n        {\n          \"id\": \"s1_title\",\n          \"x\": 120,\n          \"y\": 40,\n          \"width\": 960,\n          \"height\": 60,\n          \"html\": \"<h1 style='text-align:center;font-size:46px;color:#2c3e50'>Title Text</h1>\"\n        },\n        {\n          \"id\": \"s1_img\",\n          \"type\": \"image\",\n          \"x\": 250,\n          \"y\": 300,\n          \"width\": 600,\n          \"height\": 250,\n          \"src\": \"https://placehold.co/600x400/ffffff/222?text=AI+Healthcare\",\n          \"alt\": \"AI-powered medical analysis visualization\",\n          \"caption\": \"Next-generation healthcare diagnostics\",\n          \"prompt\": \"3D visualization of AI analyzing medical scans, with floating holographic medical data and neural network connections in a modern medical setting. Style: Clean, professional, blue and white color scheme.\",\n          \"style\": {\n            \"borderRadius\": \"8px\",\n            \"objectFit\": \"cover\",\n            \"marginBottom\": \"20px\"\n          }\n        }\n      ]\n    }\n\n    SLIDE CONTENT REQUIREMENTS:\n    1. Element IDs must follow pattern: s1_title, s1_para, etc.\n    2. Coordinates (x,y) determine position from top-left\n    3. Width and height must be appropriate for content\n    4. All HTML must include inline styles\n    5. Use consistent styling across similar elements\n\n    The presentation outline is:\n    {{ ctx.output_format }}\n  \"#\n}\n\n// Test function for validating slide generation\ntest PresentationGenerationTest {\n  functions [GeneratePresentation]\n  args {\n    input {\n      id 12345\n      title \"Sample Presentation\"\n      outline [\n        {\n          id 1\n          title \"Introduction\"\n          points [\n            \"Key point 1\",\n            \"Key point 2\",\n            \"Key point 3\"\n          ]\n        }\n      ]\n    }\n  }\n}\n\n\ntest PresentationGenerationTese {\n  functions [GeneratePresentation]\n  args {\n    input {\n      id 12346\n      title \"AI in Healthcare: Transforming the Future of Medicine\"\n      outline [\n        {\n          id 1\n          title \"Introduction: The AI Revolution in Healthcare\"\n          points [\n            \"The rising tide of AI in healthcare: Improved patient care, diagnostics, and clinical efficiency.\",\n            \"Visual: Modern hospital overlaid with circuit-style AI iconography.\",\n            \"Presenter details and organization.\",\n            \"Thesis statement: AI is poised to revolutionize healthcare, offering unprecedented opportunities for improved patient outcomes and operational efficiency.\"\n          ]\n        },\n        {\n          id 2\n          title \"Evolution of AI in Healthcare: From Concept to Reality\"\n          points [\n            \"Early applications: Expert systems and rule-based AI.\",\n            \"The rise of machine learning: Algorithms learning from data to improve accuracy and efficiency.\",\n            \"Deep learning's impact:  Advanced image analysis, natural language processing.\",\n            \"Current landscape: A blend of established and emerging AI technologies.\"\n          ]\n        },\n        {\n          id 3\n          title \"Real-World Applications: AI in Action\"\n          points [\n            \"Improved Diagnostics: AI-powered image analysis for faster and more accurate diagnosis of diseases (e.g., cancer detection).\",\n            \"Personalized Medicine: Tailoring treatments based on individual patient data and genetic information.\",\n            \"Drug Discovery and Development: Accelerating the process of identifying and developing new drugs.\",\n            \"Robotic Surgery: Enhancing precision and minimizing invasiveness in surgical procedures.\"\n          ]\n        },\n        {\n          id 4\n          title \"Innovative AI Solutions: Shaping the Future\"\n          points [\n            \"AI-powered virtual assistants for patient support and engagement.\",\n            \"Predictive analytics for hospital resource allocation and patient risk stratification.\",\n            \"Wearable sensors and remote patient monitoring: Continuous health data collection and early warning systems.\",\n            \"Blockchain technology for secure and transparent data management.\"\n          ]\n        },\n        {\n          id 5\n          title \"Ethical Considerations and Challenges\"\n          points [\n            \"Data privacy and security: Protecting sensitive patient information.\",\n            \"Algorithmic bias: Ensuring fairness and equity in AI-driven healthcare decisions.\",\n            \"Regulatory frameworks: Navigating the complex landscape of AI regulations.\",\n            \"Transparency and explainability: Understanding how AI systems arrive at their conclusions.\"\n          ]\n        },\n        {\n          id 6\n          title \"Overcoming Challenges: Fostering Collaboration and Innovation\"\n          points [\n            \"Collaboration between AI experts, healthcare professionals, and policymakers.\",\n            \"Investing in research and development to improve AI algorithms and applications.\",\n            \"Addressing workforce needs: Training and upskilling healthcare professionals in AI.\",\n            \"Establishing clear ethical guidelines and standards for AI in healthcare.\"\n          ]\n        },\n        {\n          id 7\n          title \"The Next 5-10 Years: A Vision for AI-Powered Healthcare\"\n          points [\n            \"Increased integration of AI across all aspects of healthcare delivery.\",\n            \"More personalized and proactive care based on predictive analytics and remote monitoring.\",\n            \"Significant improvements in diagnostic accuracy and treatment efficacy.\",\n            \"Wider accessibility and affordability of AI-driven healthcare solutions.\"\n          ]\n        },\n        {\n          id 8\n          title \"Case Study 1: Successful AI Implementation in [Specific Hospital/Organization]\"\n          points [\n            \"Detailed description of the AI solution implemented.\",\n            \"Quantifiable results and positive impact on patient care and operational efficiency.\",\n            \"Lessons learned and best practices for successful AI adoption.\",\n            \"Visual: Charts and graphs showcasing key performance indicators (KPIs).\"\n          ]\n        }\n        {\n          id 12\n          title \"Q&A Session: Engaging with the Audience\"\n          points [\n              \"Open the floor for questions from the audience.\",\n              \"Be prepared to answer questions about your company, technology, market, and financial projections.\",\n              \"Engage with the audience and address any concerns or doubts they may have.\"\n          ]\n        }\n      ]\n    }\n  }\n}\n\n\n// Function to validate presentation structure\nfunction ValidatePresentation(slides: SlideContent[]) -> bool {\n  client CustomGPT4oMini\n  \n  prompt #\"\n    Validate that the presentation structure meets these requirements:\n    1. Each slide has a unique slideId following pattern slide_[number]\n    2. Each element has:\n       - Unique elementId following pattern s[number]_[type]\n       - Valid x,y coordinates and dimensions\n       - HTML with proper inline styles following these patterns:\n         * Headings: style='text-align:center;font-size:46px;color:#2c3e50'\n         * Paragraphs: style='font-size:22px;line-height:1.55'\n         * Lists: style='font-size:22px;line-height:1.6;list-style-type:disc'\n    3. Background values are valid CSS (hex, rgb, rgba, or gradient)\n    4. Text styling is consistent across similar elements\n    \n    Slides to validate:\n    {{ slides }}\n\n    Return true if valid, false if any issues are found.\n    Explain any validation failures.\n  \"#\n}\n",
    "slide.baml": "// Slide editing and modification schema\n//\n// USAGE EXAMPLE:\n// Input your slide data like this:\n// {\n//   \"slide\": {\n//     \"slide_id\": \"slide_10\", \n//     \"background\": \"linear-gradient(135deg,#ffffff,#f0f4f8)\",\n//     \"content\": [\n//       {\n//         \"id\": \"s10_title\",\n//         \"type\": \"html\",\n//         \"x\": 120,\n//         \"y\": 40,\n//         \"width\": 960,\n//         \"height\": 60,\n//         \"html\": \"<h1 style='text-align:center;font-size:46px;color:#2c3e50'>Your Title</h1>\"\n//       }\n//     ]\n//   },\n//   \"editPrompt\": \"Change the title color to blue and make it larger\",\n//   \"theme\": \"light\"\n// }\n// The function will return the same exact structure with your modifications applied.\n\n// Input structures for slide editing\nclass SlideEditRequest {\n  slide SlideContentWithType @description(\"The existing slide to be edited\")\n  editPrompt string @description(\"Detailed description of what changes to make to the slide\")\n  theme string @description(\"Theme preference: 'light' or 'dark'\")\n}\n\n// Custom classes that match your exact data format\nclass ImageStyleEdit {\n  borderRadius string @description(\"Border radius of the image, e.g. '8px'\")\n  objectFit string @description(\"How the image should fit its container, e.g. 'cover'\")\n  marginBottom string @description(\"Margin below the image block, e.g. '20px'\")\n}\n\nclass ImageElementEdit {\n  id string @description(\"Unique identifier for the image element, e.g. s1_img\")\n  type string @description(\"Type of element, must be 'image'\")\n  x int @description(\"X position of the element in pixels from left\")\n  y int @description(\"Y position of the element in pixels from top\")\n  width int @description(\"Width of the element in pixels\")\n  height int @description(\"Height of the element in pixels\")\n  src string @description(\"URL for the image placeholder. Example: https://placehold.co/600x400\")\n  alt string @description(\"Alternative text description of the image\")\n  caption string @description(\"Caption text to display below the image\")\n  prompt string @description(\"Detailed description for AI image generation\")\n  style ImageStyleEdit @description(\"Style properties for the image\")\n}\n\nclass SlideElementEdit {\n  id string @description(\"Unique identifier for the element, e.g. s1_title, s1_para\")\n  type string @description(\"Type of element, must be 'html'\")\n  x int @description(\"X position of the element in pixels from left\")\n  y int @description(\"Y position of the element in pixels from top\") \n  width int @description(\"Width of the element in pixels\")\n  height int @description(\"Height of the element in pixels\")\n  html string @description(\"HTML content with required styling. Example: <h1 style='text-align:center;font-size:46px;color:#2c3e50'>Title Text</h1>\")\n}\n\nclass SlideContentWithType {\n  slide_id string @description(\"Unique identifier for the slide, e.g. slide_1\")\n  background string @description(\"Background style or color of the slide. Example: linear-gradient(135deg,#ffffff,#f0f4f8)\")\n  content (SlideElementEdit | ImageElementEdit)[] @description(\"List of elements on the slide\")\n}\n\n// Function to edit an existing slide\nfunction EditSlide(request: SlideEditRequest) -> SlideContentWithType {\n  client Gemini20Flash\n  \n  prompt #\"\n    You are a professional **Slide Editing AI Assistant** that specializes in modifying existing PowerPoint slides based on user requests. Your role is to take an existing slide and apply specific changes while maintaining professional quality and visual consistency.\n\n    ---\n\n    ## 🎯 PURPOSE:\n\n    This tool helps users quickly edit and refine existing slides by:\n    - Modifying text content, styling, and formatting\n    - Adjusting layouts and element positioning\n    - Changing colors, backgrounds, and visual themes\n    - Adding, removing, or replacing images\n    - Updating slide structure and hierarchy\n    - Improving visual appeal and readability\n\n    ---\n    ## 🖼️ IMAGE HANDLING RULES:\n\n    **IMPORTANT**: When editing slides, preserve existing images unless explicitly requested to change them:\n\n    - **Keep Original Images**: If an image element exists in the slide and the edit prompt doesn't specifically mention modifying, replacing, or removing images, maintain the exact same image properties (src, alt, caption, prompt)\n    - **Style Modifications Allowed**: You may modify the image's style properties (borderRadius, objectFit, marginBottom) to match theme changes or improve visual consistency\n    - **Only Modify Content When Requested**: Only change image content properties (src, alt, caption, prompt) when the edit prompt explicitly mentions:\n        - \"change the image\"\n        - \"replace the image\" \n        - \"add an image\"\n        - \"remove the image\"\n        - \"modify the image content\"\n    - **Position Adjustments**: You may adjust image positioning (x, y, width, height) only if needed to accommodate other layout changes or if specifically requested\n    - **Theme-Based Style Updates**: Always update image styles to match the slide theme (e.g., border colors, effects for dark/light themes)\n\n    **Example**: If editing \"Change the title color to blue\" on a slide with an image, keep the image src, alt, caption, and prompt exactly as they were, but you may adjust the style properties to maintain visual consistency.\n\n    ## 📝 EDITING INSTRUCTIONS:\n\n    **Current Slide to Edit:**\n    {{ request.slide }}\n\n    **Requested Changes:**\n    {{ request.editPrompt }}\n\n    **Theme Preference:** {{ request.theme }}\n\n    ---\n\n    ## 🎨 DESIGN & STYLE GUIDELINES:\n\n    Maintain professional, modern design standards while applying the requested changes:\n\n    **THEME BEHAVIOR:**\n    - If theme is \"light\":\n      - Use varied light backgrounds (white, off-white, subtle gradients)\n      - Dark text colors with good contrast (#2c3e50, #34495e, #1a1a1a)\n      - Accent colors: soft blues (#4285F4), greens (#34A853), teals (#00ACC1)\n    \n    - If theme is \"dark\":\n      - Use varied dark backgrounds (deep blues, charcoals, dark gradients)\n      - Light text colors with excellent contrast (#ffffff, #f8f9fa, #e9ecef)\n      - Accent colors: vibrant teals (#00BCD4), purples (#AB47BC), cyans (#00E5FF)\n\n    **TEXT ELEMENT STYLES:**\n    - Headings: style='text-align:center;font-size:46px;color:#2c3e50' (adjust color for theme)\n    - Paragraphs: style='font-size:22px;line-height:1.55' (adjust color for theme)\n    - Lists: style='font-size:22px;line-height:1.6;list-style-type:disc' (adjust color for theme)\n\n    **IMAGE GUIDELINES:**\n    1. Strategic positioning:\n       - Right-side: x=660px (55%), width=480px (40%)\n       - Left-side: x=60px (5%), width=480px (40%)\n       - Center: x=300px (25%), width=600px (50%)\n    \n    2. Each image must include:\n       - Detailed prompt for AI generation\n       - Placeholder URL with appropriate dimensions\n       - Alt text and descriptive caption\n       - Style properties with borderRadius, objectFit, marginBottom\n    \n    3. Ensure no overlap between elements\n    4. Match image colors with slide theme\n\n    **ELEMENT REQUIREMENTS:**\n    1. Element IDs must follow pattern: s[number]_[type] (e.g., s1_title, s1_para)\n    2. Coordinates (x,y) position from top-left corner\n    3. Width and height must accommodate content properly\n    4. All HTML must include complete inline styles\n    5. Maintain consistent styling across similar elements\n\n    ---\n\n    ## 🔧 EDITING APPROACH:\n\n    1. **Analyze the Current Slide:** Understand the existing structure, content, and layout\n    2. **Apply Requested Changes:** Make the specific modifications requested in the edit prompt\n    3. **Maintain Consistency:** Keep professional styling and ensure visual coherence\n    4. **Optimize Layout:** Adjust positioning if needed to accommodate changes\n    5. **Preserve Quality:** Maintain or improve the overall visual appeal\n\n    **Example Edit Scenarios:**\n    - \"Change the title color to blue\" → Update the color in the title element's style\n    - \"Add an image on the right side\" → Insert new ImageElement with proper positioning\n    - \"Make the text larger\" → Increase font-size in the style attributes\n    - \"Change background to dark theme\" → Update background and adjust text colors\n    - \"Replace the content with...\" → Update HTML content while preserving styling\n\n    ---\n\n    ## 📋 OUTPUT REQUIREMENTS:\n\n    Return the modified slide with EXACTLY the same structure as the input:\n    - Same slide_id (unless specifically requested to change)\n    - Updated background if theme or color changes were requested\n    - Modified content elements with requested changes applied\n    - Each element MUST include the \"type\" field (either \"html\" or \"image\")\n    - Maintain the exact same field order: id, type, x, y, width, height, html\n    - Proper styling maintained throughout\n    - Professional visual hierarchy preserved\n\n    **CRITICAL**: The output format must match this structure exactly:\n    {\n      \"slide_id\": \"slide_10\",\n      \"background\": \"linear-gradient(135deg,#ffffff,#f0f4f8)\",\n      \"content\": [\n        {\n          \"id\": \"s10_title\",\n          \"type\": \"html\",\n          \"x\": 120,\n          \"y\": 40,\n          \"width\": 960,\n          \"height\": 60,\n          \"html\": \"<h1 style='...'>Title</h1>\"\n        }\n      ]\n    }\n\n    Apply the requested changes while maintaining the slide's professional appearance and ensuring all elements are properly positioned and styled.\n  \"#\n}\n\n// Function to batch edit multiple slides\nfunction EditMultipleSlides(requests: SlideEditRequest[]) -> SlideContentWithType[] {\n  client Gemini20Flash\n  \n  prompt #\"\n    You are editing multiple slides in batch. For each slide edit request, apply the changes while maintaining consistency across all slides.\n    \n    Edit Requests:\n    {{ requests }}\n    \n    Apply the same design principles and styling guidelines as the single slide editor, ensuring:\n    1. Consistent theme application across all slides\n    2. Uniform styling for similar elements\n    3. Professional visual coherence\n    4. Proper element positioning and spacing\n    \n    Return an array of the modified slides in the same order as the requests.\n  \"#\n}\n\n// Test function for slide editing\ntest SlideEditTest {\n  functions [EditSlide]\n  args {\n    request {\n      slide {\n        slide_id \"slide_10\"\n        background \"linear-gradient(135deg,#ffffff,#f0f4f8)\"\n        content [\n          {\n            id \"s10_title\"\n            type \"html\"\n            x 120\n            y 40\n            width 960\n            height 60\n            html \"<h1 style='text-align:center;font-size:46px;color:#2c3e50'>Summary: Transforming Customer Engagement with AI</h1>\"\n          },\n          {\n            id \"s10_para\"\n            type \"html\"\n            x 100\n            y 150\n            width 800\n            height 300\n            html \"<p style='font-size:22px;line-height:1.55'>Our AI-powered solution is designed to revolutionize your customer engagement strategy. By leveraging personalized recommendations, AI-powered chatbots, and predictive analytics, you can deliver exceptional customer experiences, improve customer retention rates, and drive revenue growth. We are committed to helping you achieve your business goals and stay ahead of the competition.</p>\"\n          }\n        ]\n      }\n      editPrompt \"Change the title color to blue and make the paragraph text smaller\"\n      theme \"light\"\n    }\n  }\n}\n\n// Function to validate edited slide\nfunction ValidateEditedSlide(originalSlide: SlideContentWithType, editedSlide: SlideContentWithType, editPrompt: string) -> bool {\n  client CustomGPT4oMini\n  \n  prompt #\"\n    Validate that the slide edit was applied correctly:\n    \n    **Original Slide:**\n    {{ originalSlide }}\n    \n    **Edited Slide:**\n    {{ editedSlide }}\n    \n    **Edit Request:**\n    {{ editPrompt }}\n    \n    Check that:\n    1. The requested changes were properly applied\n    2. Element IDs and structure remain consistent\n    3. Styling follows the design guidelines\n    4. No elements overlap or have positioning issues\n    5. Professional quality is maintained\n    \n    Return true if the edit was successful, false otherwise.\n    Explain any issues found.\n  \"#\n}\n",
}

def get_baml_files():
    return file_map