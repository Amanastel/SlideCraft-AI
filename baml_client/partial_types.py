###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum

from pydantic import BaseModel, ConfigDict

from typing_extensions import TypeAlias, Literal
from typing import Dict, Generic, List, Optional, TypeVar, Union

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class ImageElement(BaseModel):
    id: Optional[str] = None
    type: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: Optional[int] = None
    height: Optional[int] = None
    src: Optional[str] = None
    alt: Optional[str] = None
    caption: Optional[str] = None
    prompt: Optional[str] = None
    style: Optional["ImageStyle"] = None

class ImageStyle(BaseModel):
    borderRadius: Optional[str] = None
    objectFit: Optional[str] = None
    marginBottom: Optional[str] = None

class OutlinePoint(BaseModel):
    text: Optional[str] = None

class OutlineSection(BaseModel):
    id: Optional[int] = None
    title: Optional[str] = None
    points: List[str]

class PresentationInput(BaseModel):
    id: Optional[int] = None
    title: Optional[str] = None
    outline: List["OutlineSection"]

class SlideContent(BaseModel):
    slide_id: Optional[str] = None
    background: Optional[str] = None
    content: List[Union["SlideElement", "ImageElement"]]

class SlideElement(BaseModel):
    id: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: Optional[int] = None
    height: Optional[int] = None
    html: Optional[str] = None
